<!DOCTYPE html>

<html>

<head>
    <title><%= doctor.id %>- Data Entry</title>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1.0" />
    <meta name="author" content="HEMANTH KUMAR" />
    <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <link rel="stylesheet" href="/cshr.css">
    <link rel="icon" type="image/x-icon" href="/Logo.ico">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

    
    <style>
        .profile-wrapper {
            display: flex;
            justify-content: center;
            align-items: center;
            overflow: hidden;
        }

        .title button {
            padding: 10px 15px;
            color: white;
            background-color: #AA0000;
            border: none;
            outline: none;
            letter-spacing: 1.1px;
            border-radius: 3px;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .data-wrapper {
            width: 100%;
            height: 100%;
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            background-color: white;
            overflow: hidden;
        }

        .data-wrapper .data-container {
            width: 70%;
            height: 100%;

        }

        .data-wrapper .doctor-profile-card {
            width: 30%;
            height: 640px;
            display: flex;
            justify-content: center;
            align-items: center;
            margin-bottom: 30px;
        }

        .data-wrapper .doctor-profile-card .doctor-profile {
            width: 100%;
            height: 100%;
            border: 2px solid #000000;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }

        .data-wrapper .doctor-profile-card .doctor-profile .doctor-image {
            padding: 20px;
            width: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            border-bottom: 2px solid #000000;
        }

        .data-wrapper .doctor-profile-card .doctor-profile .doctor-image img {
            border-radius: 50%;
            height: 150px;
            width: 150px;
        }
        .data-wrapper .doctor-profile-card .doctor-profile .doctor-image .image-buttons{
            width: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 10px 0px;
        }
        .data-wrapper .doctor-profile-card .doctor-profile .doctor-image .image-buttons button{
            padding: 10px 17px;
            margin: 0px 10px;
            background-color: #000000;
            color: white;
            border: none;
            outline: none;
            border-radius: 2px;
            margin-top: 10px;
            font-size: 16px;
        }

        .data-wrapper .doctor-profile-card .doctor-profile .doctor-data {
            width: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }

        .data-wrapper .doctor-profile-card .doctor-profile .doctor-data .doctor-data-box {
            width: 100%;
            padding: 15px 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border: 0.1px solid rgba(0, 0, 0, 0.2);
        }

        .data-wrapper .doctor-profile-card .doctor-profile .doctor-data .doctor-data-box p {
            letter-spacing: 1.02px;
        }
        .data-container{
            height: 100%;
            display: flex;
            justify-content: flex-start;
            align-items: flex-start;
            flex-direction: column;
            padding: 20px
        }
        .data-container p{
            letter-spacing: 0.8px;
            margin-left: 20px;
            margin-bottom: 20px;
            font-size: 1.5em;
        }
        .data-container form{
            height: 100%;
            display: flex;
            justify-content: flex-start;
            align-items: flex-start;
            flex-wrap: wrap;
            margin-top: 20px;
            border: 1px solid #000000;
            margin: 20px 20px 0px 20px;
            padding: 10px 0px;
        }
        .data-container form .data-box{
            padding: 10px 20px;
            margin: 5px 20px;
            display: flex;
            justify-content: center;
            flex-direction: column;
            position: relative;
        }
        .data-container form .data-box ion-icon.delete-icon {
            cursor: pointer;
            color: #AA0000;
            border-radius: 50%;
            padding: 7px;
            position: absolute;
            top: 65%;
            right: 22px;
            transform: translateY(-50%);
            transition: border-color 0.5s ease;
            border: 1px solid transparent;
        }
        .data-container form .data-box ion-icon.delete-icon:hover{
            border: 1px solid #AA0000;
            background-color: whitesmoke;
        }
        .data-container form .data-box-submit{
            width: 100%;
            height: 100%;
            padding: 10px 0px 0px 40px;
            border-top: 1px solid rgba(0,0,0,0.4);
            margin-top: 15px
        }
        .data-container form .data-box input{
            outline: none;
            border: 1px solid #000000;
            padding: 10px 13px;
            font-size: 1.01em;
            letter-spacing: 0.7px;
            text-transform: uppercase;
            padding-right: 30px; 
        }
        .data-container form .data-box label{
            font-size: 1.02em;
            font-family: sans-serif;
            padding-bottom: 7px;
        }
        .data-container form button{
            padding: 10px 18px;
            letter-spacing: 0.8px;
            background-color: #000000;
            color: white;
            font-size: 16px;
            border: none;
            outline: none;
            border-radius: 3px;
        }
        select{
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
            width: 200px;
            padding: 10px 20px;
            background-color: white;
            font-family: 'Poppins',sans-serif;
            color:#000000;
            font-size: 18px;
            outline: none;
            letter-spacing: 1px;
            cursor: pointer;
            border: 1px solid #000000;
        }
        select::-ms-expand{
            display: none;
        }
        select option{
            background-color: white;
            letter-spacing: 1px;
            font-size: 18px;
            
        }
        #add_btn{
            width: 100%;
            height: 100%;
            padding-left: 40px;
            display: flex;

        }
        #add_btn button{
            background: white;
            border: 1px solid #11BB;
            color: #11BB;
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 20px 20px 10px 0px;
        }
        #additionalInputs{
            display: flex;
            justify-content: flex-start;
            flex-wrap: wrap;
        }

        .mobile-profile{
            position: absolute;
            top: 180px;
            right: 40px;
            width: 170px;
            height: 45px;
            border: 1px solid black;
            background-color: black;
            color: white;
            border-radius: 3px;
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
            display: none;
        }
        .mobile-profile .mp-text{
            margin-right: 10px;
            user-select: none;
        }
        .mobile-profile .mp-text b{
            letter-spacing: 1px;
        }
        .mobile-profile .mp-img{
            width: 30px;
            height: 30px;
            border-radius: 50%;
            border: 1px solid black;
            background-image: url("/uploads/<%= doctor.photo %>");
            background-position: center;
            background-size: cover;
            background-repeat: no-repeat;
        }

        .mobile-logout{
            position: absolute;
            top: 220px;
            right: 20px;
            width: 130px;
            height: 45px;
            border: 1px solid black;
            background-color: white;
            color: black;
            border-radius: 3px;
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
            display: none;
        }
        .mobile-logout button{
            padding: 10px 18px;
            letter-spacing: 0.8px;
            background-color: white;
            color: black;
            font-size: 16px;
            border: none;
            outline: none;
            border-radius: 3px;
        }
        #gender{
            pointer-events: none;
        }

        @media only screen and (max-width: 1100px){
            .mobile-profile{
                display: flex;
            }
            .data-wrapper .doctor-profile-card{
                display: none;
                position: absolute;
                right: 40px;
                top: 225px;
                z-index: 10000;
                background-color: white;
                width: 350px;
                
            }
            .data-wrapper .doctor-profile-card .doctor-profile{
                padding-top: 20px;
            }
            .data-wrapper .data-container {
                width: 100%;
            }
        }
        @media only screen and (max-width: 700px){
            .mobile-logout{
                display: flex;
            }
            .data-container form{
                position: relative;
                top: 40px;
                right: 20px;
                margin-bottom: 40px;
            }
            .data-container form .data-box{
                width: 100%;
            }
            .data-wrapper .doctor-profile-card{
                position: absolute;
                left: 5px;
                top: 265px;
            }
            .mobile-profile{
                position: absolute;
                top: 220px;
                left: 20px;
            }
            .data-container p{
                font-size: 16px;
                position: relative;
                right: 20px;
            }
        }
    </style>


<style>
    .stats {
        width: 100vw;
        height: 100vh;
        background-color: white;
        position: fixed;
        top: 0;
        left: 0;
        z-index: 10000000;
        display: none;
        flex-direction: column;
        overflow: hidden;
    }

    .stats .stats-head {
        width: 100%;
        height: 60px;
        background-color: white;
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0 20px;
        border-bottom: 1px solid black;
    }

    .stats .stats-head ion-icon {
        padding: 5px;
        border: 1px solid #ddd;
        transition: background-color 0.3s ease;
        cursor: pointer;
    }

    .stats .stats-head ion-icon:hover {
        background-color: #ddd;
    }

    .stats .stats-head h2 {
        letter-spacing: 0.8px;
        font-family: sans-serif;
    }

    .stats .stats-body {
        width: 100%;
        height: calc(100% - 60px);
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .stats .stats-body .left-stats {
        width: 65%;
        height: 100%;
        border-right: 1px solid #ddd;
        padding: 20px;
        overflow: hidden;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .stats .stats-body .right-stats {
        width: 30%;
        height: 100%;
        padding: 20px;
        overflow: auto;
    }

    .stats .stats-body .right-stats table {
        width: 100%;
    }

    .stats .stats-body .right-stats table th,
    .stats .stats-body .right-stats table td {
        padding: 8px;
        text-align: center;
        border-bottom: 1px solid #ddd;
    }

    .stats .stats-body .right-stats table th:first-child,
    .stats .stats-body .right-stats table td:first-child {
        text-align: left;
    }

    @media screen and (max-width: 1100px) {
        .stats .stats-body {
            flex-direction: column;
        }

        .stats .stats-body .left-stats,
        .stats .stats-body .right-stats {
            width: 100%;
            height: 50%;
            border: none;
            padding: 0;
            overflow: auto;
        }

        .stats .stats-body .left-stats {
            overflow-x: auto;
        }
    }

    @media screen and (max-width: 600px) {
        .stats .stats-body .left-stats,
        .stats .stats-body .right-stats {
            height: 50%;
        }
    }

    .left-stats canvas {
        width: 100% !important;
        height: 100% !important;
    }
</style>


</head>

<body>
    <div class="container">
        <div class="header">
            <div class="img">
                <img src="/Logo.png" width="60px" />
            </div>
            <div class="heading">
                <h1>Rajiv Gandhi University of Knowledge Technologies - Nuzvid</h1>
                <h4>Catering to the Educational Needs of Gifted Rural Youth of Andhra Pradesh</h4>
                <h4>(Established by the Govt. of Andhra Pradesh and recognized as per Section 2(f), 12(B) of UGC Act,
                    1956)</h4>
            </div>
            <div class="img">
                <img src="/medical_logo.png" width="100px" />
            </div>
        </div>
        <div class="main">

            <div class="title">
                <h2>Center for Student Health Records - RGUKT NUZVID</h2>
            </div>



            <div class="data-wrapper">
                <div class="data-container">
                    <p style="font-family: sans-serif;"><b style="border-bottom: 2px solid #000000;padding-bottom: 10px;">Student Health Record Entry</b></p>
                    <form action="/recordData" method="post" id="healthRecordForm">
                        
                        <input type="hidden" id="doctor_name" name="doctorname" />
                        
                        <div class="data-box">
                            <label for="student_id">Student ID</label>
                            <input type="text" id="student_id" placeholder="Student ID" name="studentid" required  autofocus/>
                        </div>
                        <div class="data-box">
                            <label for="student_name">Student Name</label>
                            <input type="text" id="student_name" placeholder="Student Name" name="studentname" required readonly/>
                        </div>
                        <div class="data-box">
                            <label for="date">Date</label>
                            <input type="date" id="date" name="date" required/>
                        </div>
                        <div class="data-box">
                            <label for="gender">Gender</label>
                            <select name="gender" id="gender" required>
                                <option value="--select--">--select--</option>
                                <option value="Male">Male</option>
                                <option value="Female">Female</option>
                                <option value="Others">Others</option>
                            </select>
                        </div>

                        <div class="data-box">
                            <label for="problem">Medical problem</label>
                                <select name="problem" id="problem" required onchange="toggleOtherProblemInput()">
                                    <option value="">--select--</option>
                                    <option value="fever">Fever</option>
                                    <option value="cough">Cough</option>
                                    <option value="cold">Cold</option>
                                    <option value="itching">Itching</option>
                                    <option value="diarrhea">Diarrhea</option>
                                    <option value="Vomitings">Vomitings</option>
                                    <option value="headache">Head ache</option>
                                    <option value="stomachpain">Stomach pain</option>
                                    <option value="soarthroat">soar throat</option>
                                    <option value="conjuctivities">conjuctivities</option>
                                    <option value="earproblem">Ear problem</option>
                                    <option value="dental">Dental Issue</option>
                                    <option value="skinproblem">Skin problem</option>
                                    <option value="Others">Others</option>
                                </select>
                            
                        </div>
                        <div class="data-box" id="otherProblemInput" style="display: none;">
                            <label for="other_problem">Enter Problem<b style="color: #AA0000;"> *</b></label>
                            <input type="text" id="other_problem" placeholder="Enter Problem" name="other_problem" style="text-transform: upper;"/>
                        </div>
                        
                        <div class="data-box">
                            <label for="prescrption">Medicine 1</label>
                            <input type="text" placeholder="Medicine 1" name = "medicine1" required style="text-transform: uppercase;"/>
                        </div>

                        <div id="additionalInputs">
                            
                        </div>

                        <div id="add_btn">
                            <button type="button" onclick="addOption()" style="cursor: pointer;"><ion-icon name="add-outline" style="padding: 0px 5px;"></ion-icon>Add Medicine</button>
                            <!--<button type="button" onclick="deleteOption()" style="display: none;cursor: pointer;"><ion-icon name="trash-outline" style="padding: 0px 5px;"></ion-icon>Delete Medicine</button>-->
                        </div>
                        

                        <div class="data-box-submit">
                            <button style="cursor: pointer;">Submit</button>
                            <button onclick="clearForm()" style="cursor: pointer;margin-left: 10px;border: 1px solid #AA0000; background-color: white;color: #AA0000">Clear</button>
                        </div>
                        
                    </form>

                </div>

                <!-- Doctor Profile Card -->
                <div class="doctor-profile-card" id="doctorProfileCard">
                    <div class="doctor-profile">
                        <div class="doctor-image">
                            <!-- Display doctor's image -->
                            <img src="/uploads/<%= doctor.photo %>" />
                            <!-- Display doctor's name -->
                            <h3 style="padding: 20px 0px 0px 0px;text-align: center;"><%= doctor.name %></h3>
                            <div class = "image-buttons">
                                <a onclick="toggleStats()" style="text-decoration: none;"><button style="display: flex;justify-content: center;align-items: center;cursor: pointer;border-radius: 3px;">Statistics<ion-icon name="analytics-outline" style="padding: 0px 3px;"></ion-icon></button></a>
                                <a href = "/logoutEmployee" style="text-decoration: none;"><button style = "display: flex;justify-content: center;align-items: center; cursor: pointer;border-radius: 3px;">Logout<ion-icon name="log-out-outline"
                                    style="padding: 0px 3px;"></ion-icon></button></a>
                            </div>
                        </div>
                        <div class="doctor-data">
                            <!-- Display doctor's employee ID -->
                            <div class="doctor-data-box">
                                <p><b>Employee ID</b></p>
                                <p><%= doctor.id %></p>
                            </div>
                            <!-- Display doctor's qualification -->
                            <div class="doctor-data-box">
                                <p><b>Qualification</b></p>
                                <p><%= doctor.qualification %></p>
                            </div>
                            <!-- Display doctor's gender -->
                            <div class="doctor-data-box">
                                <p><b>Gender</b></p>
                                <p><%= doctor.gender %></p>
                            </div>
                            <!-- Display doctor's years active -->
                            <div class="doctor-data-box">
                                <p><b>Years active</b></p>
                                <p><%= doctor.date.getFullYear() %> - present</p>
                            </div>
                            <!-- Display doctor's email -->
                            <div class="doctor-data-box">
                                <p><b>E-mail</b></p>
                                <p><%= doctor.email %></p>
                            </div>
                            <!-- Display doctor's phone number -->
                            <div class="doctor-data-box">
                                <p><b>Phone</b></p>
                                <p><%= doctor.phone %></p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="copyright">
                <p><b>Copyright © 2015-2018 <i style="color: black;">RGUKT Nuzvid.</i></b> All rights reserved.</p>
                <p><a href="#"><b>CSHR</b></a></p>
            </div>
            
        </div>
    </div>

    <div class="mobile-profile">
        <div class="mp-text">
            <b><%= doctor.id %></b>
        </div>
        <div class="mp-img">
            
        </div>
    </div>
    <div class="mobile-logout">
        <a href = "/logoutEmployee" style="text-decoration: none;"><button style = "display: flex;justify-content: center;align-items: center; cursor: pointer;border-radius: 3px;">Logout<ion-icon name="log-out-outline"
            style="padding: 0px 3px;"></ion-icon></button></a>
    </div>


    <div class="stats" id="stats">
        <div class="stats-head">
            <h2><%= doctor.id %></h2>
            <select id="yearSelect" onchange="updateStats()">
                <!-- Options will be populated dynamically -->
            </select>
            <ion-icon name="close-outline" onclick="toggleStats()"></ion-icon>
        </div>
        <div class="stats-body">
            <div class="left-stats">
                <canvas id="statsChart"></canvas>
            </div>
            <div class="right-stats">
                <table id="statsTable">
                    <thead>
                        <tr>
                            <th>Month</th>
                            <th>Leaves</th>
                            <th>Salary</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Rows will be populated dynamically -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    
    <script>
        let statsChart; // Define the chart variable in the global scope
        const doctorJoiningYear = new Date("<%= doctor.date %>").getFullYear(); // Assuming doctor.date is the joining date
        const currentYear = new Date().getFullYear();
    
        // Populate the year dropdown
        const yearSelect = document.getElementById('yearSelect');
        for (let year = doctorJoiningYear; year <= currentYear; year++) {
            const option = document.createElement('option');
            option.value = year;
            option.textContent = year;
            yearSelect.appendChild(option);
        }
        yearSelect.value = currentYear; // Set default to current year
    
        // Function to create/update the chart
        function createChart(data) {
            const ctx = document.getElementById('statsChart').getContext('2d');
            
            if (statsChart) { // If the chart already exists, destroy it first
                statsChart.destroy();
            }
    
            statsChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
                    datasets: [{
                        label: 'Number of Shifts',
                        data: data.shifts,
                        backgroundColor: 'rgba(54, 162, 235, 0.5)',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 1
                    },
                    {
                        label: 'Number of Cases Solved',
                        data: data.casesSolved,
                        backgroundColor: 'rgba(255, 99, 132, 0.5)',
                        borderColor: 'rgba(255, 99, 132, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    animation: {
                        duration: 1000, // Duration of the animation in milliseconds
                        easing: 'easeInOutQuart' // Easing function for smoother animation
                    },
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        }
    
        // Function to update the table
        function updateTable(data) {
            const tableBody = document.querySelector('#statsTable tbody');
            tableBody.innerHTML = ''; // Clear existing rows
    
            data.months.forEach((monthData, index) => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${monthData.month}</td>
                    <td>${monthData.leaves}</td>
                    <td>${monthData.salary}</td>
                `;
                tableBody.appendChild(row);
            });
        }
    
        // Function to fetch and update statistics
        async function updateStats() {
            const selectedYear = yearSelect.value;
            const doctorId = "<%= doctor.id %>"; // Pass the doctor's ID from the backend
    
            try {
                const response = await fetch(`/api/doctor/stats?doctorId=${doctorId}&year=${selectedYear}`);
                const data = await response.json();
    
                createChart(data);
                updateTable(data);
            } catch (error) {
                console.error("Error fetching statistics:", error);
            }
        }
    
        // Function to toggle the stats section
        function toggleStats() {
            const statsDiv = document.getElementById('stats');
            if (statsDiv.style.display === 'none' || statsDiv.style.display === '') {
                statsDiv.style.display = 'flex';
                updateStats(); // Fetch and display data for the default year
            } else {
                statsDiv.style.display = 'none';
                if (statsChart) { // Destroy the chart when hiding the stats section
                    statsChart.destroy();
                }
            }
        }
    </script>
            
</body>

<script>
    window.onload = function() {
        // Get the message from the backend
        const message = `<%= typeof info !== 'undefined' ? info : '' %>`;

        // Determine the type of alert based on the message content
        if (message) {
            const isSuccess = message.toLowerCase().includes("successfully");
            const title = isSuccess ? 'Success!' : 'Error!';
            const icon = isSuccess ? 'success' : 'error';

            // Display SweetAlert2 based on the message
            Swal.fire({
                title: title,
                text: message,
                icon: icon, // 'success' or 'error'
                confirmButtonText: 'OK',
                timer: 3000, // Auto-close after 3 seconds
                timerProgressBar: true,
                showClass: {
                    popup: 'animate__animated animate__fadeInDown' // Add animations (requires animate.css)
                },
                hideClass: {
                    popup: 'animate__animated animate__fadeOutUp' // Add animations (requires animate.css)
                }
            });
        } else {
            // Default welcome message if no info is provided
            const welcomeMessage = `<% if (doctor.gender === 'Male') { %>Welcome Mr. <%= doctor.name %><% } else if (doctor.gender === 'Female') { %>Welcome Mrs. <%= doctor.name %><% } else { %>Welcome <%= doctor.name %><% } %>`;
            Swal.fire({
                title: 'Welcome!',
                text: welcomeMessage,
                icon: 'success', // Default welcome message
                confirmButtonText: 'OK',
                timer: 3000, // Auto-close after 3 seconds
                timerProgressBar: true,
                showClass: {
                    popup: 'animate__animated animate__fadeInDown' // Add animations (requires animate.css)
                },
                hideClass: {
                    popup: 'animate__animated animate__fadeOutUp' // Add animations (requires animate.css)
                }
            });
        }
    };
</script>

<script>
    function toggleOtherProblemInput() {
        var problemSelect = document.getElementById("problem");
        var otherProblemInput = document.getElementById("otherProblemInput");
        if (problemSelect.value === "Others") {
            otherProblemInput.style.display = "flex";
        } else {
            otherProblemInput.style.display = "none";
        }
    }
</script>



<!-- JavaScript code for dynamically adding and deleting input fields -->
<script>
    // Counter to keep track of the number of options
    let optionCount = 1;

    // Function to add a new option dynamically
    function addOption() {
      // Increment the option count
      optionCount++;

      // Get the container where additional inputs will be added
      const container = document.getElementById('additionalInputs');

      // Create a new div with the class 'data-box' for each additional input
      const dataBox = document.createElement('div');
      dataBox.classList.add('data-box');

      // Create a label for the new input
      const label = document.createElement('label');
      label.setAttribute('for', `input${optionCount}`);
      label.textContent = `Medicine ${optionCount}`;

      // Create a new input element
      const input = document.createElement('input');
      input.setAttribute('type', 'text');
      input.setAttribute('name', `medicine${optionCount}`);
      input.setAttribute('id', `input${optionCount}`);
      input.setAttribute('placeholder', `Medicine ${optionCount}`);
      input.setAttribute('required', '');
      input.setAttribute('style', 'text-transform: uppercase;');

      // Create a delete icon
      const deleteIcon = document.createElement('ion-icon');
      deleteIcon.setAttribute('name', 'trash-outline');
      deleteIcon.classList.add('delete-icon');
      deleteIcon.onclick = function() {
        deleteOption(dataBox);
      };

      // Append the label, input, and delete icon to the data box
      dataBox.appendChild(label);
      dataBox.appendChild(input);
      dataBox.appendChild(deleteIcon);

      // Append the data box to the container
      container.appendChild(dataBox);

      // Show or hide the "Delete Option" button based on the number of options
      updateDeleteButtonVisibility();
    }

    // Function to delete the specified option
    function deleteOption(option) {
      // Get the container where additional inputs are added
      const container = document.getElementById('additionalInputs');

      // Check if there's at least one additional input to delete
      if (optionCount > 1) {
        // Decrement the option count
        optionCount--;

        // Remove the specified data box
        container.removeChild(option);

        // Update the labels of remaining options to maintain order
        const dataBoxes = container.querySelectorAll('.data-box');
        dataBoxes.forEach((dataBox, index) => {
          const label = dataBox.querySelector('label');
          label.textContent = `Medicine ${index + 2}`;
          const input = dataBox.querySelector('input');
          input.setAttribute('placeholder',`Medicine ${index + 2}`)
        });

        // Show or hide the "Delete Option" button based on the number of options
        updateDeleteButtonVisibility();
      }
    }

    // Function to show or hide the "Delete Option" button based on the number of options
    function updateDeleteButtonVisibility() {
      const deleteButton = document.querySelector('#add_btn button[type="button"][onclick="deleteOption()"]');
      deleteButton.style.display = optionCount > 1 ? 'block' : 'none';
    }
  </script>


<!-- JavaScript code for setting the max attribute -->
<script>
    // Function to get the current date in the format "YYYY-MM-DD"
    function getCurrentDate() {
        const today = new Date();
        const year = today.getFullYear();
        let month = today.getMonth() + 1;
        let day = today.getDate();

        // Pad single-digit months and days with a leading zero
        month = month < 10 ? '0' + month : month;
        day = day < 10 ? '0' + day : day;

        return `${year}-${month}-${day}`;
    }

    // Set the max attribute of the date input to the current date
    document.getElementById('date').setAttribute('max', getCurrentDate());

   
    document.addEventListener('DOMContentLoaded', (event) => {
        const dateInput = document.getElementById('date');
        const today = new Date().toISOString().split('T')[0]; // Get today's date in YYYY-MM-DD format
        dateInput.value = today; // Set the default date to today
    });
  
</script>

<script>
    // Function to gather form data and send it to the backend
    function submitFormData() {
        // Get form data
        const studentId = document.getElementById('student_id').value;
        const studentName = document.getElementById('student_name').value;
        const date = document.getElementById('date').value;
        const gender = document.getElementById('gender').value;
        const problem = document.getElementById('problem').value;

        // Gather medicine data dynamically
        const medicines = [];
        const medicineInputs = document.querySelectorAll('input[type="text"][name^="medicine"]');

        medicineInputs.forEach(input => {
            const medicineName = input.value;
            medicines.push(medicineName);
        });


        // Prepare data to be sent
        const formData = {
            studentid: studentId,
            studentname: studentName,
            date: date,
            gender: gender,
            problem: problem,
            medicines: medicines
        };

        // Send data to the backend
        fetch('/recordData', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            console.log(data);
            // Handle successful response from the backend
        })
        .catch(error => {
            console.error('Error:', error.message);
            // Handle error
        });
    }
</script>

<script>
    const doctorName = document.querySelector('.doctor-profile-card .doctor-profile .doctor-image h3').textContent;

    // Set the value of the hidden input field to the doctor's name
    document.getElementById('doctor_name').value = doctorName;
</script>


<script>
// Function to toggle the display of the doctor profile card only in mobile view
function toggleDoctorProfile() {
    // Check if the viewport width is less than or equal to 700px (mobile view)
    if (window.innerWidth <= 1100) {
        const doctorProfileCard = document.getElementById('doctorProfileCard');
        if (doctorProfileCard.style.display === 'none' || doctorProfileCard.style.display === '') {
            doctorProfileCard.style.display = 'block';
        } else {
            doctorProfileCard.style.display = 'none';
        }
    }
}

// Add click event listener to the mobile-profile element
document.querySelector('.mobile-profile').addEventListener('click', toggleDoctorProfile);


// Function to display the doctor profile card if screen width is greater than 700px
function displayDoctorProfile() {
    const doctorProfileCard = document.getElementById('doctorProfileCard');
    if (window.innerWidth > 1100) {
        doctorProfileCard.style.display = 'block';
    } else {
        doctorProfileCard.style.display = 'none';
    }
}

// Call the function initially to set the display property based on screen width
displayDoctorProfile();

// Add event listener for window resize event to adjust display property dynamically
window.addEventListener('resize', displayDoctorProfile);

</script>

<script>
  document.getElementById("student_id").addEventListener("keyup", async function() {
    const studentId = this.value.toUpperCase();
  if (studentId.length > 0) { // Check if ID has some value
    const studentData = await fetchStudentData(studentId);
    if (studentData) {
      document.getElementById("student_name").value = studentData.name;
      document.getElementById("gender").value = studentData.gender;
    } else {
      // Handle case where student ID is not found (clear existing values)
      document.getElementById("student_name").value = "";
      document.getElementById("gender").value = "";
    }
  }
});

// Function to fetch student data from server (using fetch API)
async function fetchStudentData(studentId) {
  const response = await fetch(`/api/students/${studentId}`);
  if (!response.ok) {
    console.error("Error fetching student data:", response.statusText);
    return null;
  }
  return await response.json();
}
</script>

<script>
    function clearForm() {
        document.getElementById("healthRecordForm").reset();
    }
</script>


<script>
    // Prevent form resubmission when navigating back
    if (window.history && window.history.pushState) {
        window.history.pushState('forward', null, './#forward');
        window.onpopstate = function(event) {
            if (event.state === 'forward') {
                window.history.pushState('forward', null, './#forward');
                location.replace('/'); // Redirect to home page
            }
        };
    }
</script>

</html>