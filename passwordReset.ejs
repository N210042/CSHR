<!DOCTYPE html>
<html>
    <head>
        <title>CSHR - Reset Password</title>
        <link rel="stylesheet" href="/cshr.css">
        <link rel="icon" type="image/x-icon" href="/Logo.ico">
        <meta charset = "UTF-8"/>
        <meta name = "viewport" content = "width=device-width,initial-scale=1.0"/>
        <meta name = "author" content = "HEMANTH KUMAR"/>
        <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
        <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

        <style>
            .container .main .doctor-login{
                display: flex;
                justify-content: center;
                align-items: center;
                width: 100%;
                height: 100%;
                padding: 20px;
                background-color: white;
            }
            .container .main .doctor-login .login-form{
                width: 600px;
                height: 100%;
                display: flex;
                justify-content: center;
                align-items: center;
                padding-top: 10px;
                margin-bottom: 40px;
            }
            .container .main .doctor-login .login-form form{
                width: 100%;
                height: 100%;
                display: flex;
                justify-content: flex-start;
                align-items: center;
                flex-direction: column;
                border: .1px solid rgba(0,0,0,0.5);
                border-top: 7px solid black;
                border-radius: 3px;
                margin-top: 30px;
                padding-bottom: 20px;
            }
            .container .main .doctor-login .login-form form p{
                width: 100%;
                color: black;
                letter-spacing: 1px;
                padding: 15px 0px 10px 0px;
                font-size: 20px;
                font-weight: bold;
                font-family: sans-serif;
                text-align: center;
            }
            .container .main .doctor-login .login-form form .input-flex{
                width: 90%;
                display: flex;
                justify-content: center;
                align-items: center;
            }
            .container .main .doctor-login .login-form form .input-flex ion-icon{
                border: 1px solid black;
                font-size: 22px;
                padding: 10px;
            }
            .container .main .doctor-login .login-form form .input-flex input{
                width: 85%;
                padding: 12px 13px;
                font-size: 16px;
                outline: none;
                border: 1px solid black;
                letter-spacing: 1.1px;
            }
            .container .main .doctor-login .login-form form .h{
                width: 85%;
                display: flex;
                padding: 7px 0px;
                align-items: flex-start;
                margin-top: 10px;
            }
            .container .main .doctor-login .login-form form .k{
                width: 85%;
                margin-top: 25px;
                display: flex;
                align-items: flex-start;
            }
            .container .main .doctor-login .login-form form .h b{
                font-family: sans-serif;
            }
            .container .main .doctor-login .login-form form .k button{
                padding: 10px 17px;
                background: #000000;
                border: none;
                color: white;
                font-weight: bold;
                border-radius: 3px;
            }
            .container .main .doctor-login .login-form form .input-flex {
                position: relative;
            }

            .container .main .doctor-login .login-form form .input-flex .password-toggle {
                position: absolute;
                right: 20px;
                top: 50%;
                transform: translateY(-50%);
                cursor: pointer;
            }

            @media only screen and (max-width: 500px){
                .container .main .doctor-login .login-form form .input-flex .password-toggle{
                    position: absolute;
                    right: 0px;
                }
                .container .main .doctor-login .login-form form .h b{
                    position: relative;
                    right: 8px;
                }
                .container .main .doctor-login .login-form form .k button{
                    position: relative;
                    right: 8px;
                }
            }


            #code{
                display: flex;
                flex-direction: row;
            }
            input::-webkit-outer-spin-button,
            input::-webkit-inner-spin-button {
                -webkit-appearance: none;
                margin: 0;
            }
           
            #code input{
                width: 40px;
                height: 40px;
                margin: 10px 12px 10px 0px;
                font-size: 25px;
                padding-left: 10px;
            }
            #code input:focus{
                outline-color: rgb(0, 0, 0);
            }
        </style>

    </head>
    <body><div class = "container">
        <div class = "header">
            <div class = "img">
                <img src = "/Logo.png" width = "60px"/>
            </div>
            <div class = "heading">
                <h1>Rajiv Gandhi University of Knowledge Technologies - Nuzvid</h1>
                <h4>Catering to the Educational Needs of Gifted Rural Youth of Andhra Pradesh</h4>
                <h4>(Established by the Govt. of Andhra Pradesh and recognized as per Section 2(f), 12(B) of UGC Act, 1956)</h4>
            </div>
            <div class = "img">
                <img src = "/medical_logo.png" width = "100px"/>
            </div>
        </div>
        <div class = "main">
        
            <div class = "title">
                <h2>Center for Student Health Records - RGUKT NUZVID</h2>
            </div>
            <div class = "title" style = "background-color: white;border-bottom: 1px solid #222222;">
                <a href = "/employee">Home</a>
                <a href = "/passwordReset" style="font-weight: bold;border-bottom: 2px solid #222222;color: #000000">Reset Password</a>
            </div>
            
            <div class = "doctor-login"> 
                <div class = "login-form" style="position: relative;bottom: 20px;display: flex;flex-direction: column;">
                    <form action="" method="post">
                        <p>RESET PASSWORD</p>
                        <div class = "h">
                            <b>Employee ID</b>
                        </div>
                        <div class = "input-flex">
                            <ion-icon name="person-outline"></ion-icon>
                            <input type = "text" placeholder = "Employee ID" name="employeeid" id="userName" required autofocus autocomplete="off" style="text-transform: uppercase;">
                        </div>
                        <div class = "h">
                            <b>Registered Mobile Number</b>
                        </div>
                        <div class = "input-flex">
                            <ion-icon name="call-outline"></ion-icon>
                            <input type = "tel" id = "phone" name = "phone" placeholder = "Phone No" required autocomplete = "off">
                        </div>
                        
                        <div class = "k">
                            <button style="cursor: pointer;">Send OTP</button>
                        </div>

                        <div id="code">
                            <input type="text" maxlength="1" oninput="moveToNextField(this)" onkeydown="moveToPreviousField(event, this)">
                            <input type="text" maxlength="1" oninput="moveToNextField(this)" onkeydown="moveToPreviousField(event, this)">
                            <input type="text" maxlength="1" oninput="moveToNextField(this)" onkeydown="moveToPreviousField(event, this)">
                            <input type="text" maxlength="1" oninput="moveToNextField(this)" onkeydown="moveToPreviousField(event, this)">
                            <input type="text" maxlength="1" oninput="moveToNextField(this)" onkeydown="moveToPreviousField(event, this)">
                            <input type="text" maxlength="1" oninput="moveToNextField(this, true)" onkeydown="moveToPreviousField(event, this)">
                        </div>
                        
                        <p id="success-message" style="display: none; font-size: 16px; display: flex none; justify-content: center; align-items: center;">
                            <ion-icon name="checkmark-circle" style="margin-bottom: 3px; margin-right: 3px; font-size: 20px; color: rgb(5, 143, 5);"></ion-icon>
                            <b>Phone Number verification successful!</b>
                        </p>
                        <p id="error-message" style="display: none; font-size: 16px; display: flex none; justify-content: center; align-items: center;">
                            <ion-icon name="close-circle" style="margin-bottom: 0px; margin-right: 3px; font-size: 20px; color: rgb(201, 6, 6);"></ion-icon>
                            <b>Invalid OTP! Verification unsuccessful!!</b>
                        </p>
                        
                        <script>
                            const correctOTP = "123456"; // Replace this with the correct OTP
                        
                            function moveToNextField(currentInput, isLast = false) {
                                currentInput.value = currentInput.value.replace(/[^0-9]/g, ''); // Allow only digits
                        
                                if (currentInput.value.length === 1) { 
                                    let nextInput = currentInput.nextElementSibling;
                                    if (nextInput) {
                                        nextInput.focus();
                                    } else if (isLast) {
                                        checkOTP(); // Check OTP when the last field is entered
                                    }
                                }
                            }
                        
                            function moveToPreviousField(event, currentInput) {
                                if (event.key === "Backspace" && currentInput.value === "") {
                                    let prevInput = currentInput.previousElementSibling;
                                    if (prevInput) {
                                        prevInput.focus();
                                    }
                                }
                            }
                        
                            function checkOTP() {
                                let otpEntered = "";
                                let inputs = document.querySelectorAll("#code input");
                        
                                inputs.forEach(input => {
                                    otpEntered += input.value;
                                });
                        
                                if (otpEntered === correctOTP) {
                                    document.getElementById("success-message").style.display = "flex";
                                    document.getElementById("error-message").style.display = "none";
                                    document.getElementById("secondform").style.display = "flex";
                                    const secondForm = document.getElementById("secondform");
                                    const yOffset = secondForm.getBoundingClientRect().top + window.pageYOffset - window.innerHeight / 2 + secondForm.offsetHeight / 2;  // Calculate the vertical offset

                                    window.scrollTo({
                                        top: yOffset,
                                        behavior: "smooth" // For a smooth scroll animation
                                    });
                                } else {
                                    document.getElementById("success-message").style.display = "none";
                                    document.getElementById("error-message").style.display = "flex";
                                    document.getElementById("secondform").style.display = "none";
                                }
                        
                                // Disable all OTP input fields after checking
                                inputs.forEach(input => {
                                    input.disabled = true;
                                });
                            }
                        </script>

                        

                        
                    </form>


                    <form id="secondform" style="display: none;" onsubmit="return validateForm(event)">
                        <div class="h">
                            <b>New Password</b>
                        </div>
                        <div class="input-flex">
                            <ion-icon name="lock-closed-outline"></ion-icon>
                            <input type="password" placeholder="New Password" name="password" id="password" required autocomplete="off">
                            <ion-icon name="eye-outline" id="togglePassword" class="password-toggle"></ion-icon>
                        </div>
                    
                        <div class="h">
                            <b>Confirm Password</b>
                        </div>
                        <div class="input-flex">
                            <ion-icon name="lock-closed-outline"></ion-icon>
                            <input type="password" placeholder="Confirm Password" name="confirmPassword" id="confirmPassword" required autocomplete="off">
                        </div>
                        
                        <p id="password-error-message" style="font-size: 14px; margin-bottom: -20px;color: rgb(201, 6, 6);"></p>

                        <div class="k">
                            <button type="submit" style="cursor: pointer;">Reset Password</button>
                        </div>
                
                    </form>
                    
                    <script>
                        function validateForm(event) {
                            event.preventDefault();
                    
                            let password = document.getElementById("password").value;
                            let confirmPassword = document.getElementById("confirmPassword").value;
                            let errorMessage = document.getElementById("password-error-message");
                    
                            // Password validation regex: Minimum 8 chars, 1 number, 1 special character
                            let passwordRegex = /^(?=.*[0-9])(?=.*[\W_]).{8,}$/;
                    
                            if (!passwordRegex.test(password)) {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Please Match Password Requirements',
                                    text: 'Password must be at least 8 characters long, include one number and one special character.',
                                    confirmButtonText: 'OK',
                                    timer: 5000, // Auto-close after 5 seconds
                                    timerProgressBar: true,
                                });
                                
                                return false;
                            }
                    
                            if (password !== confirmPassword) {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Passwords Do Not Match',
                                    text: 'Please make sure both passwords are the same.',
                                    confirmButtonText: 'OK',
                                    timer: 5000, // Auto-close after 5 seconds
                                    timerProgressBar: true,
                                });
                                return false;
                            }
                    
                            let otpEntered = "";
                            document.querySelectorAll("#code input").forEach(input => {
                                otpEntered += input.value;
                            });
                    
                            if (otpEntered !== correctOTP) {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Incorrect OTP',
                                    text: 'The OTP you entered is incorrect. Please try again.',
                                    confirmButtonText: 'OK',
                                    timer: 5000, // Auto-close after 5 seconds
                                    timerProgressBar: true,
                                });
                                errorMessage.textContent = "Incorrect OTP. Please try again.";
                                errorMessage.style.display = "block";
                                return false;
                            }
                    
                            // If all validations pass, hide error message and submit form
                            errorMessage.style.display = "none";
                            Swal.fire({
                                icon: 'success',
                                title: 'Password Reset Successful!',
                                text: 'Your password has been reset successfully.',
                                confirmButtonText: 'OK',
                                timer: 3000, // Auto-close after 3 seconds
                                timerProgressBar: true,
                            }).then(() => {
                                document.getElementById("secondform").submit();
                                window.location.href = "/employee";
                            });
                        }
                    
                        function togglePasswordVisibility(inputId) {
                            let inputField = document.getElementById(inputId);
                            inputField.type = inputField.type === "password" ? "text" : "password";
                        }
                    </script>
                    
                </div>
            </div>
            
            
            
            <div class = "copyright">
                <p><b>Copyright © 2015-2018 <i style = "color: black;">RGUKT Nuzvid.</i></b> All rights reserved.</p>
                <p><a href = "#"><b>CSHR</b></a></p>
            </div>
        </div>
    </div>

    <script>
        // Select the eye icon element and the password input field
        const togglePassword = document.querySelector('#togglePassword');
        const password = document.querySelector('#password');
    
        // Add an event listener to the eye icon for click events
        togglePassword.addEventListener('click', function (e) {
            // Toggle the visibility of the password
            const type = password.getAttribute('type') === 'password' ? 'text' : 'password';
            password.setAttribute('type', type);
    
            // Change the eye icon based on password visibility
            if (type === 'text') {
                togglePassword.setAttribute('name', 'eye-off-outline'); // Change to closed eye icon
            } else {
                togglePassword.setAttribute('name', 'eye-outline'); // Change to open eye icon
            }
        });
    </script>
    
    

</html>